{"ast":null,"code":"var _jsxFileName = \"/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td, useDisclosure, Collapse } from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    fullName,\n    userId,\n    userType\n  } = location.state || {};\n  const [enrollments, setEnrollments] = useState([]);\n  const [availableCourses, setAvailableCourses] = useState([]);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure(); // Modal state control\n  const [modalMessage, setModalMessage] = useState(null);\n  const [isPreviousClassesOpen, setIsPreviousClassesOpen] = useState(false); // State for the collapsible box\n\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n        const processedEnrollments = studentEnrollments.map(enrollment => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100;\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress\n          };\n        });\n        setEnrollments(processedEnrollments);\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n    fetchEnrollments();\n  }, [fullName]);\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching available courses:', error);\n      }\n    };\n    fetchCourses();\n  }, []);\n  const handleEnroll = async courseName => {\n    try {\n      const requestBody = {\n        studentName: fullName,\n        courseName: courseName\n      };\n      const response = await axios.post('http://localhost:5000/JoinCourse', requestBody);\n      if (response.data && response.data.Message) {\n        setModalMessage(response.data.Message);\n      } else {\n        setModalMessage('Successfully enrolled in the course.');\n      }\n      onOpen();\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n          const processedEnrollments = studentEnrollments.map(enrollment => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress\n            };\n          });\n          setEnrollments(processedEnrollments);\n        } catch (error) {\n          console.error('Error refetching enrollments:', error);\n          setModalMessage('Error refetching enrollments. Please try again.');\n          onOpen();\n        }\n      };\n      fetchEnrollments();\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.Message) {\n        setModalMessage(error.response.data.Message);\n      } else if (error.response && error.response.data) {\n        setModalMessage(error.response.data);\n      } else {\n        setModalMessage('An unexpected error occurred. Please try again.');\n      }\n      onOpen();\n    }\n  };\n  const handleLogout = () => {\n    navigate('/');\n  };\n  const togglePreviousClasses = () => {\n    setIsPreviousClassesOpen(!isPreviousClassesOpen);\n  };\n\n  // Split enrollments into active and previous\n  const activeClasses = enrollments.filter(e => e.completionStatus === '0');\n  const previousClasses = enrollments.filter(e => e.completionStatus === '1');\n  const getProgressColor = progress => {\n    if (progress === 100) return 'green.300';\n    if (progress < 60) return 'red.300';\n    if (progress < 90) return 'yellow.300';\n    return 'teal.300'; // Default color\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\",\n    width: \"100vw\",\n    justify: \"center\",\n    align: \"center\",\n    bg: \"gray.50\",\n    p: 6,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      maxWidth: \"1200px\",\n      width: \"100%\",\n      borderWidth: 1,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      bg: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"xl\",\n        mb: 6,\n        textAlign: \"center\",\n        children: userType === 1 ? 'Admin Dashboard' : 'Student Dashboard'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h6\",\n        size: \"l\",\n        mb: 5,\n        textAlign: \"center\",\n        children: [\"User ID: \", userId, \", \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xl\",\n          children: \"Here's an overview of your current activities:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              as: \"h3\",\n              size: \"md\",\n              mb: 4,\n              children: \"Previous Classes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              onClick: togglePreviousClasses,\n              children: isPreviousClassesOpen ? '^' : 'Show'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: isPreviousClassesOpen,\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              overflowX: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                templateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n                gap: 6,\n                children: previousClasses.length > 0 ? previousClasses.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n                  p: 4,\n                  borderWidth: 1,\n                  borderRadius: 8,\n                  bg: \"green.300\",\n                  textAlign: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Heading, {\n                    size: \"sm\",\n                    children: enrollment.courseName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    mt: 2,\n                    children: [\"Progress: \", enrollment.progress, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n                  children: \"No previous classes found.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Your Active Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowX: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              templateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n              gap: 6,\n              children: activeClasses.length > 0 ? activeClasses.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n                p: 4,\n                borderWidth: 1,\n                borderRadius: 8,\n                bg: getProgressColor(enrollment.progress),\n                textAlign: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  size: \"sm\",\n                  children: enrollment.courseName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  mt: 2,\n                  children: [\"Progress: \", enrollment.progress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n                children: \"No active classes found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Available Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowY: \"auto\",\n            maxHeight: \"400px\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              variant: \"simple\",\n              size: \"md\",\n              width: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Thead, {\n                children: /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Course Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Max Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Current Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Enroll\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                children: availableCourses.length > 0 ? availableCourses.map(course => /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: course.courseName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.maxSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.currentSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.startDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.endDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      colorScheme: \"teal\",\n                      size: \"sm\",\n                      onClick: () => handleEnroll(course.courseName),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this)]\n                }, course.courseId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(Tr, {\n                  children: /*#__PURE__*/_jsxDEV(Td, {\n                    colSpan: 7,\n                    textAlign: \"center\",\n                    children: \"No available classes.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            size: \"md\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: onClose,\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Enrollment Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              children: modalMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              mr: 3,\n              onClick: onClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"MZm+jviPU8ehKnNhj0icky8Ad0s=\", false, function () {\n  return [useNavigate, useLocation, useDisclosure];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Text","Button","Stack","Flex","Grid","Table","Thead","Tbody","Tr","Th","Td","useDisclosure","Collapse","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Dashboard","_s","navigate","location","fullName","userId","userType","state","enrollments","setEnrollments","availableCourses","setAvailableCourses","isOpen","onOpen","onClose","modalMessage","setModalMessage","isPreviousClassesOpen","setIsPreviousClassesOpen","fetchEnrollments","response","get","studentEnrollments","data","filter","enrollment","studentName","processedEnrollments","map","progress","completionStatus","Math","floor","random","courseName","error","console","fetchCourses","handleEnroll","requestBody","post","Message","handleLogout","togglePreviousClasses","activeClasses","e","previousClasses","getProgressColor","height","width","justify","align","bg","p","children","maxWidth","borderWidth","borderRadius","boxShadow","as","size","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","spacing","fontSize","justifyContent","alignItems","onClick","in","overflowX","templateColumns","gap","length","index","mt","overflowY","maxHeight","variant","position","top","zIndex","course","description","maxSeats","currentSeats","Date","startDate","toLocaleDateString","endDate","colorScheme","courseId","colSpan","mr","_c","$RefreshReg$"],"sources":["/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td, useDisclosure, Collapse\n} from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface Enrollment {\n  courseName: string;\n  completionStatus: string;\n  progress?: number;\n}\n\ninterface Course {\n  courseId: number;\n  courseName: string;\n  description: string;\n  maxSeats: number;\n  currentSeats: number;\n  startDate: string;\n  endDate: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { fullName, userId, userType } = location.state || {};\n\n  const [enrollments, setEnrollments] = useState<Enrollment[]>([]);\n  const [availableCourses, setAvailableCourses] = useState<Course[]>([]);\n  const { isOpen, onOpen, onClose } = useDisclosure();  // Modal state control\n  const [modalMessage, setModalMessage] = useState<string | null>(null);\n  const [isPreviousClassesOpen, setIsPreviousClassesOpen] = useState(false);  // State for the collapsible box\n\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n\n        const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100;\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress,\n          };\n        });\n\n        setEnrollments(processedEnrollments);\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n\n    fetchEnrollments();\n  }, [fullName]);\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching available courses:', error);\n      }\n    };\n\n    fetchCourses();\n  }, []);\n\n  const handleEnroll = async (courseName: string) => {\n    try {\n      const requestBody = {\n        studentName: fullName,\n        courseName: courseName,\n      };\n\n      const response = await axios.post('http://localhost:5000/JoinCourse', requestBody);\n\n      if (response.data && response.data.Message) {\n        setModalMessage(response.data.Message);\n      } else {\n        setModalMessage('Successfully enrolled in the course.');\n      }\n\n      onOpen();\n\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n\n          const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress,\n            };\n          });\n\n          setEnrollments(processedEnrollments);\n        } catch (error) {\n          console.error('Error refetching enrollments:', error);\n          setModalMessage('Error refetching enrollments. Please try again.');\n          onOpen();\n        }\n      };\n\n      fetchEnrollments();\n    } catch (error: any) {\n      if (error.response && error.response.data && error.response.data.Message) {\n        setModalMessage(error.response.data.Message);\n      } else if (error.response && error.response.data) {\n        setModalMessage(error.response.data);\n      } else {\n        setModalMessage('An unexpected error occurred. Please try again.');\n      }\n\n      onOpen();\n    }\n  };\n\n  const handleLogout = () => {\n    navigate('/');\n  };\n\n  const togglePreviousClasses = () => {\n    setIsPreviousClassesOpen(!isPreviousClassesOpen);\n  };\n\n  // Split enrollments into active and previous\n  const activeClasses = enrollments.filter((e) => e.completionStatus === '0');\n  const previousClasses = enrollments.filter((e) => e.completionStatus === '1');\n\n  const getProgressColor = (progress: number) => {\n    if (progress === 100) return 'green.300';\n    if (progress < 60) return 'red.300';\n    if (progress < 90) return 'yellow.300';\n    return 'teal.300';  // Default color\n  };\n\n  return (\n    <Flex height=\"100vh\" width=\"100vw\" justify=\"center\" align=\"center\" bg=\"gray.50\" p={6}>\n      <Box p={8} maxWidth=\"1200px\" width=\"100%\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" bg=\"white\">\n        <Heading as=\"h2\" size=\"xl\" mb={6} textAlign=\"center\">\n          {userType === 1 ? 'Admin Dashboard' : 'Student Dashboard'}\n        </Heading>\n        <Heading as=\"h6\" size=\"l\" mb={5} textAlign=\"center\">\n          User ID: {userId}, <i><b>{fullName}</b></i>\n        </Heading>\n\n        <Stack spacing={6}>\n          <Text fontSize=\"xl\">Here's an overview of your current activities:</Text>\n\n          {/* Previous Classes Section - Collapsible */}\n          <Box>\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n              <Heading as=\"h3\" size=\"md\" mb={4}>\n                Previous Classes\n              </Heading>\n              <Button size=\"sm\" onClick={togglePreviousClasses}>\n                {isPreviousClassesOpen ? '^' : 'Show'}\n              </Button>\n            </Flex>\n            <Collapse in={isPreviousClassesOpen}>\n              <Flex overflowX=\"auto\">\n                <Grid templateColumns=\"repeat(auto-fit, minmax(250px, 1fr))\" gap={6}>\n                  {previousClasses.length > 0 ? (\n                    previousClasses.map((enrollment, index) => (\n                      <Box\n                        key={index}\n                        p={4}\n                        borderWidth={1}\n                        borderRadius={8}\n                        bg=\"green.300\"\n                        textAlign=\"center\"\n                      >\n                        <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                        <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                      </Box>\n                    ))\n                  ) : (\n                    <Text>No previous classes found.</Text>\n                  )}\n                </Grid>\n              </Flex>\n            </Collapse>\n          </Box>\n\n          {/* Active Classes Section */}\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Your Active Classes\n            </Heading>\n            <Flex overflowX=\"auto\">\n              <Grid templateColumns=\"repeat(auto-fill, minmax(250px, 1fr))\" gap={6}>\n                {activeClasses.length > 0 ? (\n                  activeClasses.map((enrollment, index) => (\n                    <Box\n                      key={index}\n                      p={4}\n                      borderWidth={1}\n                      borderRadius={8}\n                      bg={getProgressColor(enrollment.progress!)}\n                      textAlign=\"center\"\n                    >\n                      <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                      <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                    </Box>\n                  ))\n                ) : (\n                  <Text>No active classes found.</Text>\n                )}\n              </Grid>\n            </Flex>\n          </Box>\n\n          {/* Available Classes Section */}\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Available Classes\n            </Heading>\n\n            <Flex overflowY=\"auto\" maxHeight=\"400px\">\n              <Table variant=\"simple\" size=\"md\" width=\"100%\">\n                <Thead>\n                  <Tr>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Course Name</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Description</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Max Seats</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Current Seats</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Start Date</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>End Date</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Enroll</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {availableCourses.length > 0 ? (\n                    availableCourses.map((course) => (\n                      <Tr key={course.courseId}>\n                        <Td>{course.courseName}</Td>\n                        <Td>{course.description}</Td>\n                        <Td>{course.maxSeats}</Td>\n                        <Td>{course.currentSeats}</Td>\n                        <Td>{new Date(course.startDate).toLocaleDateString()}</Td>\n                        <Td>{new Date(course.endDate).toLocaleDateString()}</Td>\n                        <Td>\n                          <Button colorScheme=\"teal\" size=\"sm\" onClick={() => handleEnroll(course.courseName)}>\n                            Add\n                          </Button>\n                        </Td>\n                      </Tr>\n                    ))\n                  ) : (\n                    <Tr>\n                      <Td colSpan={7} textAlign=\"center\">\n                        No available classes.\n                      </Td>\n                    </Tr>\n                  )}\n                </Tbody>\n              </Table>\n            </Flex>\n          </Box>\n\n          {/* Logout Button */}\n          <Flex justifyContent=\"flex-end\">\n            <Button colorScheme=\"red\" size=\"md\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </Flex>\n        </Stack>\n\n        {/* Modal for showing success or error messages */}\n        <Modal isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Enrollment Status</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Text>{modalMessage}</Text>\n            </ModalBody>\n            <ModalFooter>\n              <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n                Close\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}