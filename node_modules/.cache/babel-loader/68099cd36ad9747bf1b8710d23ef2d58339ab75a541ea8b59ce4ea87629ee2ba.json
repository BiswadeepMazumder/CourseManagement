{"ast":null,"code":"var _jsxFileName = \"/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate(); // Hook for logout navigation\n  const location = useLocation(); // Hook to access state from Login page\n\n  // Destructure the data passed via state\n  const {\n    fullName,\n    userId\n  } = location.state || {};\n\n  // State to hold the student's enrollments\n  const [enrollments, setEnrollments] = useState([]);\n  // State to hold the list of available courses\n  const [availableCourses, setAvailableCourses] = useState([]);\n  // State to track loading or any error in course joining\n  const [enrollError, setEnrollError] = useState(null);\n\n  // Fetch enrollments data on component mount\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        // Filter enrollments based on the student's name (fullName)\n        const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n\n        // Process each enrollment to add a progress field based on completionStatus\n        const processedEnrollments = studentEnrollments.map(enrollment => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100; // Completed course\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20; // Random progress between 20% and 90%\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress\n          };\n        });\n\n        // Update state with the processed enrollments, limit to max 3 enrollments\n        setEnrollments(processedEnrollments.slice(0, 3)); // Max 3 subjects\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n    fetchEnrollments();\n  }, [fullName]);\n\n  // Fetch available courses on component mount\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data); // Update state with available courses\n      } catch (error) {\n        console.error('Error fetching available courses:', error);\n      }\n    };\n    fetchCourses();\n  }, []);\n\n  // Function to handle course enrollment\n  const handleEnroll = async courseName => {\n    try {\n      const requestBody = {\n        studentName: fullName,\n        courseName: courseName\n      };\n\n      // await axios.post('http://localhost:5000/JoinCourse', requestBody);\n      // alert(`Successfully enrolled in ${courseName}`);\n      // setEnrollError(null);  // Reset error message on successful enrollment\n\n      // Refetch the enrollments after successful enrollment\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n          const processedEnrollments = studentEnrollments.map(enrollment => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100; // Completed course\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress\n            };\n          });\n          setEnrollments(processedEnrollments.slice(0, 3)); // Update enrollments\n        } catch (error) {\n          console.error('Error refetching enrollments:', error);\n        }\n      };\n      fetchEnrollments(); // Refresh enrollment list\n    } catch (error) {\n      setEnrollError(`Error enrolling in course: ${courseName}. Please try again.`);\n      console.error(`Error enrolling in course ${courseName}:`, error);\n    }\n  };\n\n  // Logout handler function\n  const handleLogout = () => {\n    navigate('/'); // Navigate back to the login page\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\" // Full height of the viewport\n    ,\n    width: \"100vw\" // Full width of the viewport\n    ,\n    justify: \"center\",\n    align: \"center\" // Center the content vertically and horizontally\n    ,\n    bg: \"gray.50\",\n    p: 6,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      maxWidth: \"1200px\",\n      width: \"100%\",\n      borderWidth: 1,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      bg: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"xl\",\n        mb: 6,\n        textAlign: \"center\",\n        children: \"Student Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h6\",\n        size: \"l\",\n        mb: 5,\n        textAlign: \"center\",\n        children: [\"User ID: \", userId, \", \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xl\",\n          children: \" Here's an overview of your current activities:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Your Active Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            templateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n            gap: 6,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: enrollments.length > 0 ? enrollments.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n              p: 4,\n              borderWidth: 1,\n              borderRadius: 8,\n              bg: \"teal.100\",\n              textAlign: \"center\" // Center text inside each class box\n              ,\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                size: \"sm\",\n                children: enrollment.courseName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                mt: 2,\n                children: [\"Progress: \", enrollment.progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n              children: \"No active classes found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Available Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowY: \"auto\",\n            maxHeight: \"400px\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Table, {\n              variant: \"simple\",\n              size: \"md\",\n              width: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Thead, {\n                children: /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Course Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Max Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Current Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Enroll\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                children: availableCourses.length > 0 ? availableCourses.map(course => /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: course.courseName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.maxSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.currentSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.startDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.endDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      colorScheme: \"teal\",\n                      size: \"sm\",\n                      onClick: () => handleEnroll(course.courseName) // Call the enroll handler\n                      ,\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 25\n                  }, this)]\n                }, course.courseId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(Tr, {\n                  children: /*#__PURE__*/_jsxDEV(Td, {\n                    colSpan: 7,\n                    textAlign: \"center\",\n                    children: \"No available classes.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), enrollError && /*#__PURE__*/_jsxDEV(Text, {\n            color: \"red.500\",\n            mt: 4,\n            children: enrollError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            size: \"md\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"xK5O0FKOtohcCG1XqzTAYbzhVAc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Text","Button","Stack","Flex","Grid","Table","Thead","Tbody","Tr","Th","Td","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Dashboard","_s","navigate","location","fullName","userId","state","enrollments","setEnrollments","availableCourses","setAvailableCourses","enrollError","setEnrollError","fetchEnrollments","response","get","studentEnrollments","data","filter","enrollment","studentName","processedEnrollments","map","progress","completionStatus","Math","floor","random","courseName","slice","error","console","fetchCourses","handleEnroll","requestBody","handleLogout","height","width","justify","align","bg","p","children","maxWidth","borderWidth","borderRadius","boxShadow","as","size","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","spacing","fontSize","templateColumns","gap","justifyContent","alignItems","length","index","mt","overflowY","maxHeight","variant","position","top","zIndex","course","description","maxSeats","currentSeats","Date","startDate","toLocaleDateString","endDate","colorScheme","onClick","courseId","colSpan","color","_c","$RefreshReg$"],"sources":["/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Login.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface Enrollment {\n  courseName: string;\n  completionStatus: string;\n  progress?: number;\n}\n\ninterface Course {\n  courseId: number;\n  courseName: string;\n  description: string;\n  maxSeats: number;\n  currentSeats: number;\n  startDate: string;\n  endDate: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate(); // Hook for logout navigation\n  const location = useLocation(); // Hook to access state from Login page\n\n  // Destructure the data passed via state\n  const { fullName, userId } = location.state || {};\n\n  // State to hold the student's enrollments\n  const [enrollments, setEnrollments] = useState<Enrollment[]>([]);\n  // State to hold the list of available courses\n  const [availableCourses, setAvailableCourses] = useState<Course[]>([]);\n  // State to track loading or any error in course joining\n  const [enrollError, setEnrollError] = useState<string | null>(null);\n\n  // Fetch enrollments data on component mount\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        // Filter enrollments based on the student's name (fullName)\n        const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n\n        // Process each enrollment to add a progress field based on completionStatus\n        const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100;  // Completed course\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;  // Random progress between 20% and 90%\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress,\n          };\n        });\n\n        // Update state with the processed enrollments, limit to max 3 enrollments\n        setEnrollments(processedEnrollments.slice(0, 3)); // Max 3 subjects\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n\n    fetchEnrollments();\n  }, [fullName]);\n\n  // Fetch available courses on component mount\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);  // Update state with available courses\n      } catch (error) {\n        console.error('Error fetching available courses:', error);\n      }\n    };\n\n    fetchCourses();\n  }, []);\n\n  // Function to handle course enrollment\n  const handleEnroll = async (courseName: string) => {\n    try {\n      const requestBody = {\n        studentName: fullName,\n        courseName: courseName,\n      };\n\n     // await axios.post('http://localhost:5000/JoinCourse', requestBody);\n     // alert(`Successfully enrolled in ${courseName}`);\n     // setEnrollError(null);  // Reset error message on successful enrollment\n\n      // Refetch the enrollments after successful enrollment\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n\n          const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;  // Completed course\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress,\n            };\n          });\n\n          setEnrollments(processedEnrollments.slice(0, 3)); // Update enrollments\n        } catch (error) {\n          console.error('Error refetching enrollments:', error);\n        }\n      };\n\n      fetchEnrollments(); // Refresh enrollment list\n    } catch (error) {\n      setEnrollError(`Error enrolling in course: ${courseName}. Please try again.`);\n      console.error(`Error enrolling in course ${courseName}:`, error);\n    }\n  };\n\n  // Logout handler function\n  const handleLogout = () => {\n    navigate('/');  // Navigate back to the login page\n  };\n\n  return (\n    <Flex\n      height=\"100vh\" // Full height of the viewport\n      width=\"100vw\"  // Full width of the viewport\n      justify=\"center\"\n      align=\"center\"  // Center the content vertically and horizontally\n      bg=\"gray.50\"\n      p={6}\n    >\n      <Box\n        p={8}\n        maxWidth=\"1200px\"\n        width=\"100%\"\n        borderWidth={1}\n        borderRadius={8}\n        boxShadow=\"lg\"\n        bg=\"white\"\n      >\n        {/* Conditionally render the dashboard title */}\n        <Heading as=\"h2\" size=\"xl\" mb={6} textAlign=\"center\">\n          Student Dashboard\n        </Heading>\n        <Heading as=\"h6\" size=\"l\" mb={5} textAlign=\"center\">\n          User ID: {userId}, <i><b>{fullName}</b></i>\n        </Heading>\n\n        <Stack spacing={6}>\n          <Text fontSize=\"xl\"> Here's an overview of your current activities:</Text>\n\n          {/* Section for Current Enrollments */}\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Your Active Classes\n            </Heading>\n            <Grid templateColumns=\"repeat(auto-fit, minmax(250px, 1fr))\" gap={6} justifyContent=\"center\" alignItems=\"center\">\n              {/* Dynamically render the enrolled classes */}\n              {enrollments.length > 0 ? (\n                enrollments.map((enrollment, index) => (\n                  <Box\n                    key={index}\n                    p={4}\n                    borderWidth={1}\n                    borderRadius={8}\n                    bg=\"teal.100\"\n                    textAlign=\"center\" // Center text inside each class box\n                  >\n                    <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                    <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                  </Box>\n                ))\n              ) : (\n                <Text>No active classes found.</Text>\n              )}\n            </Grid>\n          </Box>\n\n          {/* Section for Available Classes */}\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Available Classes\n            </Heading>\n\n            {/* Table for displaying available courses, with scrollable feature */}\n            <Flex overflowY=\"auto\" maxHeight=\"400px\"> {/* Fixed height of 400px */}\n              <Table variant=\"simple\" size=\"md\" width=\"100%\">\n                <Thead>\n                  <Tr>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Course Name</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Description</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Max Seats</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Current Seats</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Start Date</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>End Date</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Enroll</Th> {/* Add Enroll Column */}\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {availableCourses.length > 0 ? (\n                    availableCourses.map((course) => (\n                      <Tr key={course.courseId}>\n                        <Td>{course.courseName}</Td>\n                        <Td>{course.description}</Td>\n                        <Td>{course.maxSeats}</Td>\n                        <Td>{course.currentSeats}</Td>\n                        <Td>{new Date(course.startDate).toLocaleDateString()}</Td>\n                        <Td>{new Date(course.endDate).toLocaleDateString()}</Td>\n                        <Td>\n                          <Button\n                            colorScheme=\"teal\"\n                            size=\"sm\"\n                            onClick={() => handleEnroll(course.courseName)} // Call the enroll handler\n                          >\n                            Add\n                          </Button>\n                        </Td>\n                      </Tr>\n                    ))\n                  ) : (\n                    <Tr>\n                      <Td colSpan={7} textAlign=\"center\">\n                        No available classes.\n                      </Td>\n                    </Tr>\n                  )}\n                </Tbody>\n              </Table>\n            </Flex>\n            {enrollError && <Text color=\"red.500\" mt={4}>{enrollError}</Text>} {/* Show error if any */}\n          </Box>\n\n          {/* Logout Button */}\n          <Flex justifyContent=\"flex-end\">\n            <Button colorScheme=\"red\" size=\"md\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </Flex>\n        </Stack>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}