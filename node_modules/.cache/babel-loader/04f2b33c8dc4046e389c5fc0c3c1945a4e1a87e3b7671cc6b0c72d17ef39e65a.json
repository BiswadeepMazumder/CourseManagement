{"ast":null,"code":"var _jsxFileName = \"/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from 'react-router-dom';\nimport Login from './Login';\nimport Dashboard from './Dashboard'; // Assuming Dashboard is another component\n\n// This component checks if the user is logged in and protects the dashboard route\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const location = useLocation();\n  const {\n    fullName\n  } = location.state || {}; // Check if fullName is available in state (indicating login)\n\n  if (!fullName) {\n    // If no fullName exists, user is not logged in, redirect to login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nconst DashboardWrapper = () => {\n  _s2();\n  const location = useLocation();\n  const {\n    userType,\n    fullName,\n    userId\n  } = location.state || {\n    userType: 2,\n    fullName: '',\n    userId: null\n  }; // Defaults if not available\n\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    userType: userType,\n    fullName: fullName,\n    userId: userId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s2(DashboardWrapper, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c2 = DashboardWrapper;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(DashboardWrapper, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"DashboardWrapper\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","useLocation","Navigate","Login","Dashboard","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","location","fullName","state","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","DashboardWrapper","_s2","userType","userId","_c2","App","path","element","_c3","$RefreshReg$"],"sources":["/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from 'react-router-dom';\nimport Login from './Login';\nimport Dashboard from './Dashboard';  // Assuming Dashboard is another component\n\n// This component checks if the user is logged in and protects the dashboard route\nconst ProtectedRoute = ({ children }) => {\n  const location = useLocation();\n  const { fullName } = location.state || {};  // Check if fullName is available in state (indicating login)\n\n  if (!fullName) {\n    // If no fullName exists, user is not logged in, redirect to login\n    return <Navigate to=\"/\" />;\n  }\n\n  return children;\n};\n\nconst DashboardWrapper = () => {\n  const location = useLocation();\n  const { userType, fullName, userId } = location.state || { userType: 2, fullName: '', userId: null };  // Defaults if not available\n\n  return <Dashboard userType={userType} fullName={fullName} userId={userId} />;\n};\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        {/* Public route for login */}\n        <Route path=\"/\" element={<Login />} />\n\n        {/* Protected route for dashboard */}\n        <Route\n          path=\"/dashboard\"\n          element={\n            <ProtectedRoute> {/* Protect the dashboard route */}\n              <DashboardWrapper />\n            </ProtectedRoute>\n          }\n        />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,kBAAkB;AAChG,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAE;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAS,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAE;;EAE5C,IAAI,CAACD,QAAQ,EAAE;IACb;IACA,oBAAOL,OAAA,CAACJ,QAAQ;MAACW,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,OAAOT,QAAQ;AACjB,CAAC;AAACC,EAAA,CAVIF,cAAc;EAAA,QACDN,WAAW;AAAA;AAAAiB,EAAA,GADxBX,cAAc;AAYpB,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMV,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEoB,QAAQ;IAAEV,QAAQ;IAAEW;EAAO,CAAC,GAAGZ,QAAQ,CAACE,KAAK,IAAI;IAAES,QAAQ,EAAE,CAAC;IAAEV,QAAQ,EAAE,EAAE;IAAEW,MAAM,EAAE;EAAK,CAAC,CAAC,CAAE;;EAEvG,oBAAOhB,OAAA,CAACF,SAAS;IAACiB,QAAQ,EAAEA,QAAS;IAACV,QAAQ,EAAEA,QAAS;IAACW,MAAM,EAAEA;EAAO;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9E,CAAC;AAACG,GAAA,CALID,gBAAgB;EAAA,QACHlB,WAAW;AAAA;AAAAsB,GAAA,GADxBJ,gBAAgB;AAOtB,MAAMK,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACElB,OAAA,CAACR,MAAM;IAAAU,QAAA,eACLF,OAAA,CAACP,MAAM;MAAAS,QAAA,gBAELF,OAAA,CAACN,KAAK;QAACyB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEpB,OAAA,CAACH,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGtCX,OAAA,CAACN,KAAK;QACJyB,IAAI,EAAC,YAAY;QACjBC,OAAO,eACLpB,OAAA,CAACC,cAAc;UAAAC,QAAA,GAAC,GAAC,eACfF,OAAA,CAACa,gBAAgB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACU,GAAA,GAnBIH,GAAG;AAqBT,eAAeA,GAAG;AAAC,IAAAN,EAAA,EAAAK,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}