{"ast":null,"code":"var _jsxFileName = \"/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td, useDisclosure } from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    fullName,\n    userId,\n    userType\n  } = location.state || {};\n  const [enrollments, setEnrollments] = useState([]);\n  const [availableCourses, setAvailableCourses] = useState([]);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [modalMessage, setModalMessage] = useState(null);\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n        const processedEnrollments = studentEnrollments.map(enrollment => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100;\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress\n          };\n        });\n        setEnrollments(processedEnrollments);\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n    fetchEnrollments();\n  }, [fullName]);\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching available courses:', error);\n      }\n    };\n    fetchCourses();\n  }, []);\n  const handleEnroll = async courseName => {\n    try {\n      const requestBody = {\n        studentName: fullName,\n        courseName: courseName\n      };\n      const response = await axios.post('http://localhost:5000/JoinCourse', requestBody);\n      if (response.data && response.data.Message) {\n        setModalMessage(response.data.Message);\n      } else {\n        setModalMessage('Successfully enrolled in the course.');\n      }\n      onOpen();\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n          const processedEnrollments = studentEnrollments.map(enrollment => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress\n            };\n          });\n          setEnrollments(processedEnrollments);\n        } catch (error) {\n          console.error('Error refetching enrollments:', error);\n          setModalMessage('Error refetching enrollments. Please try again.');\n          onOpen();\n        }\n      };\n      fetchEnrollments();\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.Message) {\n        setModalMessage(error.response.data.Message);\n      } else if (error.response && error.response.data) {\n        setModalMessage(error.response.data);\n      } else {\n        setModalMessage('An unexpected error occurred. Please try again.');\n      }\n      onOpen();\n    }\n  };\n  const handleLogout = () => {\n    navigate('/');\n  };\n\n  // Split enrollments into active and previous\n  const activeClasses = enrollments.filter(e => e.completionStatus === '0');\n  const previousClasses = enrollments.filter(e => e.completionStatus === '1');\n  const getProgressColor = progress => {\n    if (progress === 100) return 'green.300';\n    if (progress < 60) return 'red.300';\n    if (progress < 90) return 'yellow.300';\n    return 'teal.300'; // Default color\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\",\n    width: \"100vw\",\n    justify: \"center\",\n    align: \"center\",\n    bg: \"gray.50\",\n    p: 6,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      maxWidth: \"1200px\",\n      width: \"100%\",\n      borderWidth: 1,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      bg: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"xl\",\n        mb: 6,\n        textAlign: \"center\",\n        children: userType === 1 ? 'Admin Dashboard' : 'Student Dashboard'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h6\",\n        size: \"l\",\n        mb: 5,\n        textAlign: \"center\",\n        children: [\"User ID: \", userId, \", \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xl\",\n          children: \"Here's an overview of your current activities:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Your Active Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowX: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              templateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n              gap: 6,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: activeClasses.length > 0 ? activeClasses.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n                p: 4,\n                borderWidth: 1,\n                borderRadius: 8,\n                bg: getProgressColor(enrollment.progress),\n                textAlign: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  size: \"sm\",\n                  children: enrollment.courseName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  mt: 2,\n                  children: [\"Progress: \", enrollment.progress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n                children: \"No active classes found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Previous Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowX: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              templateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n              gap: 6,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: previousClasses.length > 0 ? previousClasses.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n                p: 4,\n                borderWidth: 1,\n                borderRadius: 8,\n                bg: \"green.300\",\n                textAlign: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  size: \"sm\",\n                  children: enrollment.courseName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  mt: 2,\n                  children: [\"Progress: \", enrollment.progress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n                children: \"No previous classes found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Available Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowY: \"auto\",\n            maxHeight: \"400px\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              variant: \"simple\",\n              size: \"md\",\n              width: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Thead, {\n                children: /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Course Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Max Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Current Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Enroll\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                children: availableCourses.length > 0 ? availableCourses.map(course => /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: course.courseName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.maxSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.currentSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.startDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.endDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      colorScheme: \"teal\",\n                      size: \"sm\",\n                      onClick: () => handleEnroll(course.courseName),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this)]\n                }, course.courseId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(Tr, {\n                  children: /*#__PURE__*/_jsxDEV(Td, {\n                    colSpan: 7,\n                    textAlign: \"center\",\n                    children: \"No available classes.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            size: \"md\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: onClose,\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Enrollment Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              children: modalMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              mr: 3,\n              onClick: onClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XZBUj3xh+PRLUzLjrvxM3paGXwA=\", false, function () {\n  return [useNavigate, useLocation, useDisclosure];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Text","Button","Stack","Flex","Grid","Table","Thead","Tbody","Tr","Th","Td","useDisclosure","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Dashboard","_s","navigate","location","fullName","userId","userType","state","enrollments","setEnrollments","availableCourses","setAvailableCourses","isOpen","onOpen","onClose","modalMessage","setModalMessage","fetchEnrollments","response","get","studentEnrollments","data","filter","enrollment","studentName","processedEnrollments","map","progress","completionStatus","Math","floor","random","courseName","error","console","fetchCourses","handleEnroll","requestBody","post","Message","handleLogout","activeClasses","e","previousClasses","getProgressColor","height","width","justify","align","bg","p","children","maxWidth","borderWidth","borderRadius","boxShadow","as","size","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","spacing","fontSize","overflowX","templateColumns","gap","justifyContent","alignItems","length","index","mt","overflowY","maxHeight","variant","position","top","zIndex","course","description","maxSeats","currentSeats","Date","startDate","toLocaleDateString","endDate","colorScheme","onClick","courseId","colSpan","mr","_c","$RefreshReg$"],"sources":["/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td, useDisclosure } from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface Enrollment {\n  courseName: string;\n  completionStatus: string;\n  progress?: number;\n}\n\ninterface Course {\n  courseId: number;\n  courseName: string;\n  description: string;\n  maxSeats: number;\n  currentSeats: number;\n  startDate: string;\n  endDate: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { fullName, userId, userType } = location.state || {};\n\n  const [enrollments, setEnrollments] = useState<Enrollment[]>([]);\n  const [availableCourses, setAvailableCourses] = useState<Course[]>([]);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [modalMessage, setModalMessage] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n\n        const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100;\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress,\n          };\n        });\n\n        setEnrollments(processedEnrollments);\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n\n    fetchEnrollments();\n  }, [fullName]);\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching available courses:', error);\n      }\n    };\n\n    fetchCourses();\n  }, []);\n\n  const handleEnroll = async (courseName: string) => {\n    try {\n      const requestBody = {\n        studentName: fullName,\n        courseName: courseName,\n      };\n\n      const response = await axios.post('http://localhost:5000/JoinCourse', requestBody);\n\n      if (response.data && response.data.Message) {\n        setModalMessage(response.data.Message);\n      } else {\n        setModalMessage('Successfully enrolled in the course.');\n      }\n      \n      onOpen();\n\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n\n          const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress,\n            };\n          });\n\n          setEnrollments(processedEnrollments);\n        } catch (error) {\n          console.error('Error refetching enrollments:', error);\n          setModalMessage('Error refetching enrollments. Please try again.');\n          onOpen();\n        }\n      };\n\n      fetchEnrollments();\n    } catch (error: any) {\n      if (error.response && error.response.data && error.response.data.Message) {\n        setModalMessage(error.response.data.Message);\n      } else if (error.response && error.response.data) {\n        setModalMessage(error.response.data);\n      } else {\n        setModalMessage('An unexpected error occurred. Please try again.');\n      }\n\n      onOpen();\n    }\n  };\n\n  const handleLogout = () => {\n    navigate('/');\n  };\n\n  // Split enrollments into active and previous\n  const activeClasses = enrollments.filter((e) => e.completionStatus === '0');\n  const previousClasses = enrollments.filter((e) => e.completionStatus === '1');\n\n  const getProgressColor = (progress: number) => {\n    if (progress === 100) return 'green.300';\n    if (progress < 60) return 'red.300';\n    if (progress < 90) return 'yellow.300';\n    return 'teal.300';  // Default color\n  };\n\n  return (\n    <Flex height=\"100vh\" width=\"100vw\" justify=\"center\" align=\"center\" bg=\"gray.50\" p={6}>\n      <Box p={8} maxWidth=\"1200px\" width=\"100%\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" bg=\"white\">\n        <Heading as=\"h2\" size=\"xl\" mb={6} textAlign=\"center\">\n          {userType === 1 ? 'Admin Dashboard' : 'Student Dashboard'}\n        </Heading>\n        <Heading as=\"h6\" size=\"l\" mb={5} textAlign=\"center\">\n          User ID: {userId}, <i><b>{fullName}</b></i>\n        </Heading>\n\n        <Stack spacing={6}>\n          <Text fontSize=\"xl\">Here's an overview of your current activities:</Text>\n\n          {/* Active Classes Section */}\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Your Active Classes\n            </Heading>\n            <Flex overflowX=\"auto\">\n              <Grid templateColumns=\"repeat(auto-fit, minmax(250px, 1fr))\" gap={6} justifyContent=\"center\" alignItems=\"center\">\n                {activeClasses.length > 0 ? (\n                  activeClasses.map((enrollment, index) => (\n                    <Box\n                      key={index}\n                      p={4}\n                      borderWidth={1}\n                      borderRadius={8}\n                      bg={getProgressColor(enrollment.progress!)}\n                      textAlign=\"center\"\n                    >\n                      <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                      <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                    </Box>\n                  ))\n                ) : (\n                  <Text>No active classes found.</Text>\n                )}\n              </Grid>\n            </Flex>\n          </Box>\n\n          {/* Previous Classes Section */}\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Previous Classes\n            </Heading>\n            <Flex overflowX=\"auto\">\n              <Grid templateColumns=\"repeat(auto-fit, minmax(250px, 1fr))\" gap={6} justifyContent=\"center\" alignItems=\"center\">\n                {previousClasses.length > 0 ? (\n                  previousClasses.map((enrollment, index) => (\n                    <Box\n                      key={index}\n                      p={4}\n                      borderWidth={1}\n                      borderRadius={8}\n                      bg=\"green.300\"\n                      textAlign=\"center\"\n                    >\n                      <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                      <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                    </Box>\n                  ))\n                ) : (\n                  <Text>No previous classes found.</Text>\n                )}\n              </Grid>\n            </Flex>\n          </Box>\n\n          {/* Available Classes Section */}\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Available Classes\n            </Heading>\n\n            <Flex overflowY=\"auto\" maxHeight=\"400px\">\n              <Table variant=\"simple\" size=\"md\" width=\"100%\">\n                <Thead>\n                  <Tr>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Course Name</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Description</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Max Seats</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Current Seats</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Start Date</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>End Date</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Enroll</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {availableCourses.length > 0 ? (\n                    availableCourses.map((course) => (\n                      <Tr key={course.courseId}>\n                        <Td>{course.courseName}</Td>\n                        <Td>{course.description}</Td>\n                        <Td>{course.maxSeats}</Td>\n                        <Td>{course.currentSeats}</Td>\n                        <Td>{new Date(course.startDate).toLocaleDateString()}</Td>\n                        <Td>{new Date(course.endDate).toLocaleDateString()}</Td>\n                        <Td>\n                          <Button colorScheme=\"teal\" size=\"sm\" onClick={() => handleEnroll(course.courseName)}>\n                            Add\n                          </Button>\n                        </Td>\n                      </Tr>\n                    ))\n                  ) : (\n                    <Tr>\n                      <Td colSpan={7} textAlign=\"center\">\n                        No available classes.\n                      </Td>\n                    </Tr>\n                  )}\n                </Tbody>\n              </Table>\n            </Flex>\n          </Box>\n\n          {/* Logout Button */}\n          <Flex justifyContent=\"flex-end\">\n            <Button colorScheme=\"red\" size=\"md\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </Flex>\n        </Stack>\n\n        {/* Modal for showing success or error messages */}\n        <Modal isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Enrollment Status</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Text>{modalMessage}</Text>\n            </ModalBody>\n            <ModalFooter>\n              <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n                Close\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}