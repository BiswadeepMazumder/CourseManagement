{"ast":null,"code":"var _jsxFileName = \"/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td, useDisclosure } from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    fullName,\n    userId\n  } = location.state || {};\n\n  // State to hold the student's enrollments\n  const [enrollments, setEnrollments] = useState([]);\n  // State to hold the list of available courses\n  const [availableCourses, setAvailableCourses] = useState([]);\n  // Modal control state\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [modalMessage, setModalMessage] = useState(null);\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n        const processedEnrollments = studentEnrollments.map(enrollment => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100;\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress\n          };\n        });\n        setEnrollments(processedEnrollments.slice(0, 3)); // Max 3 subjects\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n    fetchEnrollments();\n  }, [fullName]);\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching available courses:', error);\n      }\n    };\n    fetchCourses();\n  }, []);\n  const handleEnroll = async courseName => {\n    try {\n      const requestBody = {\n        studentName: fullName,\n        courseName: courseName\n      };\n\n      // Make API request to enroll the student\n      const response = await axios.post('http://localhost:5000/JoinCourse', requestBody);\n\n      // Explicitly check if the status is 200 (OK)\n      if (response.status === 200) {\n        setModalMessage(`Successfully enrolled in ${courseName}`);\n      } else {\n        // Handle unexpected status codes\n        setModalMessage(`Enrollment failed. Server responded with status: ${response.status}`);\n      }\n      onOpen();\n\n      // Refetch enrollments after successful enrollment\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n          const processedEnrollments = studentEnrollments.map(enrollment => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress\n            };\n          });\n          setEnrollments(processedEnrollments.slice(0, 3));\n        } catch (error) {\n          console.error('Error refetching enrollments:', error);\n          setModalMessage('Error refetching enrollments. Please try again.');\n          onOpen();\n        }\n      };\n      fetchEnrollments(); // Fetch the updated list of enrollments\n    } catch (error) {\n      // Log full error for better debugging\n      console.error('Error enrolling in course:', error);\n\n      // Check if the error is an Axios error and handle it properly\n      if (error.response) {\n        // The request was made, but the server responded with a status code that is not 2xx\n        setModalMessage(`Error enrolling in course: ${courseName}. Server responded with status ${error.response.status}`);\n      } else if (error.request) {\n        // The request was made, but no response was received (network error or server didn't respond)\n        setModalMessage(`Error enrolling in course: ${courseName}. No response from server. Please check your network.`);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        setModalMessage(`Error enrolling in course: ${courseName}. ${error.message}`);\n      }\n      onOpen();\n    }\n  };\n  const handleLogout = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\",\n    width: \"100vw\",\n    justify: \"center\",\n    align: \"center\",\n    bg: \"gray.50\",\n    p: 6,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      maxWidth: \"1200px\",\n      width: \"100%\",\n      borderWidth: 1,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      bg: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"xl\",\n        mb: 6,\n        textAlign: \"center\",\n        children: \"Student Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h6\",\n        size: \"l\",\n        mb: 5,\n        textAlign: \"center\",\n        children: [\"User ID: \", userId, \", \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xl\",\n          children: \" Here's an overview of your current activities:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Your Active Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            templateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n            gap: 6,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: enrollments.length > 0 ? enrollments.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n              p: 4,\n              borderWidth: 1,\n              borderRadius: 8,\n              bg: \"teal.100\",\n              textAlign: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                size: \"sm\",\n                children: enrollment.courseName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                mt: 2,\n                children: [\"Progress: \", enrollment.progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n              children: \"No active classes found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Available Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowY: \"auto\",\n            maxHeight: \"400px\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              variant: \"simple\",\n              size: \"md\",\n              width: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Thead, {\n                children: /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Course Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Max Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Current Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Enroll\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                children: availableCourses.length > 0 ? availableCourses.map(course => /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: course.courseName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.maxSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.currentSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.startDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.endDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      colorScheme: \"teal\",\n                      size: \"sm\",\n                      onClick: () => handleEnroll(course.courseName),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this)]\n                }, course.courseId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(Tr, {\n                  children: /*#__PURE__*/_jsxDEV(Td, {\n                    colSpan: 7,\n                    textAlign: \"center\",\n                    children: \"No available classes.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            size: \"md\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: onClose,\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Enrollment Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              children: modalMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              mr: 3,\n              onClick: onClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XZBUj3xh+PRLUzLjrvxM3paGXwA=\", false, function () {\n  return [useNavigate, useLocation, useDisclosure];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Text","Button","Stack","Flex","Grid","Table","Thead","Tbody","Tr","Th","Td","useDisclosure","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Dashboard","_s","navigate","location","fullName","userId","state","enrollments","setEnrollments","availableCourses","setAvailableCourses","isOpen","onOpen","onClose","modalMessage","setModalMessage","fetchEnrollments","response","get","studentEnrollments","data","filter","enrollment","studentName","processedEnrollments","map","progress","completionStatus","Math","floor","random","courseName","slice","error","console","fetchCourses","handleEnroll","requestBody","post","status","request","message","handleLogout","height","width","justify","align","bg","p","children","maxWidth","borderWidth","borderRadius","boxShadow","as","size","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","spacing","fontSize","templateColumns","gap","justifyContent","alignItems","length","index","mt","overflowY","maxHeight","variant","position","top","zIndex","course","description","maxSeats","currentSeats","Date","startDate","toLocaleDateString","endDate","colorScheme","onClick","courseId","colSpan","mr","_c","$RefreshReg$"],"sources":["/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td, useDisclosure } from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface Enrollment {\n  courseName: string;\n  completionStatus: string;\n  progress?: number;\n}\n\ninterface Course {\n  courseId: number;\n  courseName: string;\n  description: string;\n  maxSeats: number;\n  currentSeats: number;\n  startDate: string;\n  endDate: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { fullName, userId } = location.state || {};\n\n  // State to hold the student's enrollments\n  const [enrollments, setEnrollments] = useState<Enrollment[]>([]);\n  // State to hold the list of available courses\n  const [availableCourses, setAvailableCourses] = useState<Course[]>([]);\n  // Modal control state\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [modalMessage, setModalMessage] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n\n        const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100;\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress,\n          };\n        });\n\n        setEnrollments(processedEnrollments.slice(0, 3)); // Max 3 subjects\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n\n    fetchEnrollments();\n  }, [fullName]);\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching available courses:', error);\n      }\n    };\n\n    fetchCourses();\n  }, []);\n\n  const handleEnroll = async (courseName: string) => {\n    try {\n      const requestBody = {\n        studentName: fullName,\n        courseName: courseName,\n      };\n  \n      // Make API request to enroll the student\n      const response = await axios.post('http://localhost:5000/JoinCourse', requestBody);\n  \n      // Explicitly check if the status is 200 (OK)\n      if (response.status === 200) {\n        setModalMessage(`Successfully enrolled in ${courseName}`);\n      } else {\n        // Handle unexpected status codes\n        setModalMessage(`Enrollment failed. Server responded with status: ${response.status}`);\n      }\n      \n      onOpen();\n  \n      // Refetch enrollments after successful enrollment\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n  \n          const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress,\n            };\n          });\n  \n          setEnrollments(processedEnrollments.slice(0, 3));\n        } catch (error) {\n          console.error('Error refetching enrollments:', error);\n          setModalMessage('Error refetching enrollments. Please try again.');\n          onOpen();\n        }\n      };\n  \n      fetchEnrollments();  // Fetch the updated list of enrollments\n  \n    } catch (error: any) {\n      // Log full error for better debugging\n      console.error('Error enrolling in course:', error);\n      \n      // Check if the error is an Axios error and handle it properly\n      if (error.response) {\n        // The request was made, but the server responded with a status code that is not 2xx\n        setModalMessage(`Error enrolling in course: ${courseName}. Server responded with status ${error.response.status}`);\n      } else if (error.request) {\n        // The request was made, but no response was received (network error or server didn't respond)\n        setModalMessage(`Error enrolling in course: ${courseName}. No response from server. Please check your network.`);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        setModalMessage(`Error enrolling in course: ${courseName}. ${error.message}`);\n      }\n      \n      onOpen();\n    }\n  };\n  \n\n  const handleLogout = () => {\n    navigate('/');\n  };\n\n  return (\n    <Flex\n      height=\"100vh\"\n      width=\"100vw\"\n      justify=\"center\"\n      align=\"center\"\n      bg=\"gray.50\"\n      p={6}\n    >\n      <Box\n        p={8}\n        maxWidth=\"1200px\"\n        width=\"100%\"\n        borderWidth={1}\n        borderRadius={8}\n        boxShadow=\"lg\"\n        bg=\"white\"\n      >\n        <Heading as=\"h2\" size=\"xl\" mb={6} textAlign=\"center\">\n          Student Dashboard\n        </Heading>\n        <Heading as=\"h6\" size=\"l\" mb={5} textAlign=\"center\">\n          User ID: {userId}, <i><b>{fullName}</b></i>\n        </Heading>\n\n        <Stack spacing={6}>\n          <Text fontSize=\"xl\"> Here's an overview of your current activities:</Text>\n\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Your Active Classes\n            </Heading>\n            <Grid templateColumns=\"repeat(auto-fit, minmax(250px, 1fr))\" gap={6} justifyContent=\"center\" alignItems=\"center\">\n              {enrollments.length > 0 ? (\n                enrollments.map((enrollment, index) => (\n                  <Box\n                    key={index}\n                    p={4}\n                    borderWidth={1}\n                    borderRadius={8}\n                    bg=\"teal.100\"\n                    textAlign=\"center\"\n                  >\n                    <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                    <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                  </Box>\n                ))\n              ) : (\n                <Text>No active classes found.</Text>\n              )}\n            </Grid>\n          </Box>\n\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Available Classes\n            </Heading>\n\n            <Flex overflowY=\"auto\" maxHeight=\"400px\">\n              <Table variant=\"simple\" size=\"md\" width=\"100%\">\n                <Thead>\n                  <Tr>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Course Name</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Description</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Max Seats</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Current Seats</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Start Date</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>End Date</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Enroll</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {availableCourses.length > 0 ? (\n                    availableCourses.map((course) => (\n                      <Tr key={course.courseId}>\n                        <Td>{course.courseName}</Td>\n                        <Td>{course.description}</Td>\n                        <Td>{course.maxSeats}</Td>\n                        <Td>{course.currentSeats}</Td>\n                        <Td>{new Date(course.startDate).toLocaleDateString()}</Td>\n                        <Td>{new Date(course.endDate).toLocaleDateString()}</Td>\n                        <Td>\n                          <Button\n                            colorScheme=\"teal\"\n                            size=\"sm\"\n                            onClick={() => handleEnroll(course.courseName)}\n                          >\n                            Add\n                          </Button>\n                        </Td>\n                      </Tr>\n                    ))\n                  ) : (\n                    <Tr>\n                      <Td colSpan={7} textAlign=\"center\">\n                        No available classes.\n                      </Td>\n                    </Tr>\n                  )}\n                </Tbody>\n              </Table>\n            </Flex>\n          </Box>\n\n          <Flex justifyContent=\"flex-end\">\n            <Button colorScheme=\"red\" size=\"md\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </Flex>\n        </Stack>\n\n        {/* Modal for showing success or error messages */}\n        <Modal isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Enrollment Status</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Text>{modalMessage}</Text>\n            </ModalBody>\n            <ModalFooter>\n              <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n                Close\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}