{"ast":null,"code":"var _jsxFileName = \"/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Grid } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate(); // Hook for logout navigation\n  const location = useLocation(); // Hook to access state from Login page\n\n  // Destructure the data passed via state\n  const {\n    statusCode,\n    fullName,\n    userId\n  } = location.state || {};\n\n  // State to hold the student's enrollments\n  const [enrollments, setEnrollments] = useState([]);\n\n  // Fetch enrollments data on component mount\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        // Filter enrollments based on the student's name (fullName)\n        const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n\n        // Process each enrollment to add a progress field based on completionStatus\n        const processedEnrollments = studentEnrollments.map(enrollment => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100; // Completed course\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20; // Random progress between 20% and 90%\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress\n          };\n        });\n\n        // Update state with the processed enrollments, limit to max 3 enrollments\n        setEnrollments(processedEnrollments.slice(0, 3)); // Max 3 subjects\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n    fetchEnrollments();\n  }, [fullName]);\n\n  // Logout handler function\n  const handleLogout = () => {\n    navigate('/'); // Navigate back to the login page\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\" // Full height of the viewport\n    ,\n    width: \"100vw\" // Full width of the viewport\n    ,\n    justify: \"center\",\n    align: \"center\" // Center the content vertically and horizontally\n    ,\n    bg: \"gray.50\",\n    p: 6,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      maxWidth: \"1200px\",\n      width: \"100%\",\n      borderWidth: 1,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      bg: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"xl\",\n        mb: 6,\n        textAlign: \"center\",\n        children: \"Student Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h6\",\n        size: \"l\",\n        mb: 5,\n        textAlign: \"center\",\n        children: [\"User ID: \", userId, \", \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"xl\",\n          children: \" Here's an overview of your current activities:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Your Active Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            templateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n            gap: 6,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: enrollments.length > 0 ? enrollments.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n              p: 4,\n              borderWidth: 1,\n              borderRadius: 8,\n              bg: \"teal.100\",\n              textAlign: \"center\" // Center text inside each class box\n              ,\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                size: \"sm\",\n                children: enrollment.courseName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                mt: 2,\n                children: [\"Progress: \", enrollment.progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n              children: \"No active classes found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Available Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            size: \"md\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"R8jPlXzG8O2Y/jSv4TXXZdXNb1U=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Text","Button","Stack","Flex","Grid","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Dashboard","_s","navigate","location","statusCode","fullName","userId","state","enrollments","setEnrollments","fetchEnrollments","response","get","studentEnrollments","data","filter","enrollment","studentName","processedEnrollments","map","progress","completionStatus","Math","floor","random","courseName","slice","error","console","handleLogout","height","width","justify","align","bg","p","children","maxWidth","borderWidth","borderRadius","boxShadow","as","size","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","spacing","fontSize","templateColumns","gap","justifyContent","alignItems","length","index","mt","colorScheme","onClick","_c","$RefreshReg$"],"sources":["/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Grid } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface Enrollment {\n  courseName: string;\n  completionStatus: string;\n  progress?: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();  // Hook for logout navigation\n  const location = useLocation();  // Hook to access state from Login page\n\n  // Destructure the data passed via state\n  const { statusCode, fullName, userId } = location.state || {};\n\n  // State to hold the student's enrollments\n  const [enrollments, setEnrollments] = useState<Enrollment[]>([]);\n\n  // Fetch enrollments data on component mount\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        // Filter enrollments based on the student's name (fullName)\n        const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n\n        // Process each enrollment to add a progress field based on completionStatus\n        const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100;  // Completed course\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;  // Random progress between 20% and 90%\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress,\n          };\n        });\n\n        // Update state with the processed enrollments, limit to max 3 enrollments\n        setEnrollments(processedEnrollments.slice(0, 3)); // Max 3 subjects\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n\n    fetchEnrollments();\n  }, [fullName]);\n\n  // Logout handler function\n  const handleLogout = () => {\n    navigate('/');  // Navigate back to the login page\n  };\n\n  return (\n    <Flex\n      height=\"100vh\" // Full height of the viewport\n      width=\"100vw\"  // Full width of the viewport\n      justify=\"center\"\n      align=\"center\"  // Center the content vertically and horizontally\n      bg=\"gray.50\"\n      p={6}\n    >\n      <Box\n        p={8}\n        maxWidth=\"1200px\"\n        width=\"100%\"\n        borderWidth={1}\n        borderRadius={8}\n        boxShadow=\"lg\"\n        bg=\"white\"\n      >\n        {/* Conditionally render the dashboard title based on userType */}\n        <Heading as=\"h2\" size=\"xl\" mb={6} textAlign=\"center\">\n          Student Dashboard\n        </Heading>\n        <Heading as=\"h6\" size=\"l\" mb={5} textAlign=\"center\">\n          User ID: {userId}, <i><b>{fullName}</b></i>\n        </Heading>\n\n        <Stack spacing={6}>\n          <Text fontSize=\"xl\"> Here's an overview of your current activities:</Text>\n\n          {/* Section for Current Enrollments */}\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Your Active Classes\n            </Heading>\n            <Grid templateColumns=\"repeat(auto-fit, minmax(250px, 1fr))\" gap={6} justifyContent=\"center\" alignItems=\"center\">\n              {/* Dynamically render the enrolled classes */}\n              {enrollments.length > 0 ? (\n                enrollments.map((enrollment, index) => (\n                  <Box\n                    key={index}\n                    p={4}\n                    borderWidth={1}\n                    borderRadius={8}\n                    bg=\"teal.100\"\n                    textAlign=\"center\" // Center text inside each class box\n                  >\n                    <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                    <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                  </Box>\n                ))\n              ) : (\n                <Text>No active classes found.</Text>\n              )}\n            </Grid>\n          </Box>\n\n          {/* Section for Available Classes */}\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Available Classes\n            </Heading>\n          </Box>\n\n          {/* Logout Button */}\n          <Flex justifyContent=\"flex-end\">\n            <Button colorScheme=\"red\" size=\"md\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </Flex>\n        </Stack>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}