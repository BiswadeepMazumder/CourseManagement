{"ast":null,"code":"var _jsxFileName = \"/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td, useDisclosure, Collapse } from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    fullName,\n    userId,\n    userType\n  } = location.state || {}; // Extract userType from the location state\n\n  const [enrollments, setEnrollments] = useState([]);\n  const [availableCourses, setAvailableCourses] = useState([]);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure(); // Modal state control\n  const [modalMessage, setModalMessage] = useState(null);\n  const [isPreviousClassesOpen, setIsPreviousClassesOpen] = useState(false); // Set to false initially\n\n  // Debugging alert to show the userType\n  useEffect(() => {\n    if (userType) {\n      console.log(`User Type: ${userType}`);\n    } else {\n      console.log('User Type is not defined or missing.');\n    }\n  }, [userType]);\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n        const processedEnrollments = studentEnrollments.map(enrollment => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100;\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress\n          };\n        });\n        setEnrollments(processedEnrollments);\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n    fetchEnrollments();\n  }, [fullName]);\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching available courses:', error);\n      }\n    };\n    fetchCourses();\n  }, []);\n  const handleEnroll = async courseName => {\n    try {\n      const requestBody = {\n        studentName: fullName,\n        courseName: courseName\n      };\n      const response = await axios.post('http://localhost:5000/JoinCourse', requestBody);\n      if (response.data && response.data.Message) {\n        setModalMessage(response.data.Message);\n      } else {\n        setModalMessage('Successfully enrolled in the course.');\n      }\n      onOpen();\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n          const processedEnrollments = studentEnrollments.map(enrollment => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress\n            };\n          });\n          setEnrollments(processedEnrollments);\n        } catch (error) {\n          console.error('Error refetching enrollments:', error);\n          setModalMessage('Error refetching enrollments. Please try again.');\n          onOpen();\n        }\n      };\n      fetchEnrollments();\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.Message) {\n        setModalMessage(error.response.data.Message);\n      } else if (error.response && error.response.data) {\n        setModalMessage(error.response.data);\n      } else {\n        setModalMessage('An unexpected error occurred. Please try again.');\n      }\n      onOpen();\n    }\n  };\n  const handleLogout = () => {\n    navigate('/');\n  };\n  const togglePreviousClasses = () => {\n    setIsPreviousClassesOpen(!isPreviousClassesOpen);\n  };\n\n  // Split enrollments into active and previous\n  const activeClasses = enrollments.filter(e => e.completionStatus === '0');\n  const previousClasses = enrollments.filter(e => e.completionStatus === '1');\n  const getProgressColor = progress => {\n    if (progress === 100) return 'green.300';\n    if (progress < 60) return 'red.300';\n    if (progress < 90) return 'yellow.300';\n    return 'teal.300'; // Default color\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"120vh\",\n    width: \"100vw\",\n    justify: \"center\",\n    align: \"center\",\n    bg: \"gray.50\",\n    p: 6,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      maxWidth: \"1200px\",\n      width: \"100%\",\n      borderWidth: 1,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      bg: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"xl\",\n        mb: 6,\n        textAlign: \"center\",\n        children: userType === 1 ? 'Admin Dashboard' : 'Student Dashboard'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h6\",\n        size: \"l\",\n        mb: 5,\n        textAlign: \"center\",\n        children: [\"User ID: \", userId, \", \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              as: \"h3\",\n              size: \"md\",\n              mb: 4,\n              children: \"Completed Courses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              onClick: togglePreviousClasses,\n              children: isPreviousClassesOpen ? 'Hide' : 'Show'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: isPreviousClassesOpen,\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              overflowX: \"auto\",\n              direction: \"column\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                templateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n                gap: 3,\n                children: previousClasses.length > 0 ? previousClasses.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n                  p: 4,\n                  borderWidth: 1,\n                  borderRadius: 8,\n                  bg: \"green.300\",\n                  textAlign: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Heading, {\n                    size: \"sm\",\n                    children: enrollment.courseName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    mt: 2,\n                    children: [\"Progress: \", enrollment.progress, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n                  children: \"No previous classes found.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Active Courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowX: \"auto\",\n            direction: \"column\",\n            gap: \"2\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              templateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n              gap: 6,\n              justifyContent: \"center\",\n              children: activeClasses.length > 0 ? activeClasses.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n                p: 4,\n                borderWidth: 1,\n                borderRadius: 8,\n                bg: getProgressColor(enrollment.progress),\n                textAlign: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  size: \"sm\",\n                  children: enrollment.courseName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  mt: 2,\n                  children: [\"Progress: \", enrollment.progress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n                children: \"No active classes found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Available Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowY: \"auto\",\n            maxHeight: \"400px\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              variant: \"simple\",\n              size: \"md\",\n              width: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Thead, {\n                children: /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Course Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Max Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Current Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Enroll\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                children: availableCourses.length > 0 ? availableCourses.map(course => /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: course.courseName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.maxSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.currentSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.startDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.endDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      colorScheme: \"teal\",\n                      size: \"sm\",\n                      onClick: () => handleEnroll(course.courseName),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this)]\n                }, course.courseId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(Tr, {\n                  children: /*#__PURE__*/_jsxDEV(Td, {\n                    colSpan: 7,\n                    textAlign: \"center\",\n                    children: \"No available classes.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            size: \"md\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: onClose,\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Enrollment Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              children: modalMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              mr: 3,\n              onClick: onClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"PbKYpOXRNzePRQbqz4h4CvVUlyQ=\", false, function () {\n  return [useNavigate, useLocation, useDisclosure];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Text","Button","Stack","Flex","Grid","Table","Thead","Tbody","Tr","Th","Td","useDisclosure","Collapse","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Dashboard","_s","navigate","location","fullName","userId","userType","state","enrollments","setEnrollments","availableCourses","setAvailableCourses","isOpen","onOpen","onClose","modalMessage","setModalMessage","isPreviousClassesOpen","setIsPreviousClassesOpen","console","log","fetchEnrollments","response","get","studentEnrollments","data","filter","enrollment","studentName","processedEnrollments","map","progress","completionStatus","Math","floor","random","courseName","error","fetchCourses","handleEnroll","requestBody","post","Message","handleLogout","togglePreviousClasses","activeClasses","e","previousClasses","getProgressColor","height","width","justify","align","bg","p","children","maxWidth","borderWidth","borderRadius","boxShadow","as","size","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","spacing","justifyContent","alignItems","onClick","in","overflowX","direction","templateColumns","gap","length","index","mt","overflowY","maxHeight","variant","position","top","zIndex","course","description","maxSeats","currentSeats","Date","startDate","toLocaleDateString","endDate","colorScheme","courseId","colSpan","mr","_c","$RefreshReg$"],"sources":["/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td, useDisclosure, Collapse\n} from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface Enrollment {\n  courseName: string;\n  completionStatus: string;\n  progress?: number;\n}\n\ninterface Course {\n  courseId: number;\n  courseName: string;\n  description: string;\n  maxSeats: number;\n  currentSeats: number;\n  startDate: string;\n  endDate: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { fullName, userId, userType } = location.state || {}; // Extract userType from the location state\n\n  const [enrollments, setEnrollments] = useState<Enrollment[]>([]);\n  const [availableCourses, setAvailableCourses] = useState<Course[]>([]);\n  const { isOpen, onOpen, onClose } = useDisclosure();  // Modal state control\n  const [modalMessage, setModalMessage] = useState<string | null>(null);\n  const [isPreviousClassesOpen, setIsPreviousClassesOpen] = useState(false);  // Set to false initially\n\n  // Debugging alert to show the userType\n  useEffect(() => {\n    if (userType) {\n      console.log(`User Type: ${userType}`);\n    } else {\n      console.log('User Type is not defined or missing.');\n    }\n  }, [userType]);\n\n  useEffect(() => {\n    const fetchEnrollments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n        const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n\n        const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n          let progress = 0;\n          if (enrollment.completionStatus === \"1\") {\n            progress = 100;\n          } else {\n            progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n          }\n          return {\n            courseName: enrollment.courseName,\n            completionStatus: enrollment.completionStatus,\n            progress,\n          };\n        });\n\n        setEnrollments(processedEnrollments);\n      } catch (error) {\n        console.error('Error fetching enrollments:', error);\n      }\n    };\n\n    fetchEnrollments();\n  }, [fullName]);\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching available courses:', error);\n      }\n    };\n\n    fetchCourses();\n  }, []);\n\n  const handleEnroll = async (courseName: string) => {\n    try {\n      const requestBody = {\n        studentName: fullName,\n        courseName: courseName,\n      };\n\n      const response = await axios.post('http://localhost:5000/JoinCourse', requestBody);\n\n      if (response.data && response.data.Message) {\n        setModalMessage(response.data.Message);\n      } else {\n        setModalMessage('Successfully enrolled in the course.');\n      }\n\n      onOpen();\n\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n\n          const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress,\n            };\n          });\n\n          setEnrollments(processedEnrollments);\n        } catch (error) {\n          console.error('Error refetching enrollments:', error);\n          setModalMessage('Error refetching enrollments. Please try again.');\n          onOpen();\n        }\n      };\n\n      fetchEnrollments();\n    } catch (error: any) {\n      if (error.response && error.response.data && error.response.data.Message) {\n        setModalMessage(error.response.data.Message);\n      } else if (error.response && error.response.data) {\n        setModalMessage(error.response.data);\n      } else {\n        setModalMessage('An unexpected error occurred. Please try again.');\n      }\n\n      onOpen();\n    }\n  };\n\n  const handleLogout = () => {\n    navigate('/');\n  };\n\n  const togglePreviousClasses = () => {\n    setIsPreviousClassesOpen(!isPreviousClassesOpen);\n  };\n\n  // Split enrollments into active and previous\n  const activeClasses = enrollments.filter((e) => e.completionStatus === '0');\n  const previousClasses = enrollments.filter((e) => e.completionStatus === '1');\n\n  const getProgressColor = (progress: number) => {\n    if (progress === 100) return 'green.300';\n    if (progress < 60) return 'red.300';\n    if (progress < 90) return 'yellow.300';\n    return 'teal.300';  // Default color\n  };\n\n  return (\n    <Flex height=\"120vh\" width=\"100vw\" justify=\"center\" align=\"center\" bg=\"gray.50\" p={6}>\n      <Box p={8} maxWidth=\"1200px\" width=\"100%\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" bg=\"white\">\n        <Heading as=\"h2\" size=\"xl\" mb={6} textAlign=\"center\">\n          {userType === 1 ? 'Admin Dashboard' : 'Student Dashboard'}\n        </Heading>\n        <Heading as=\"h6\" size=\"l\" mb={5} textAlign=\"center\">\n          User ID: {userId}, <i><b>{fullName}</b></i>\n        </Heading>\n\n        <Stack spacing={6}>\n          <Box>\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n              <Heading as=\"h3\" size=\"md\" mb={4}>\n                Completed Courses\n              </Heading>\n              <Button size=\"sm\" onClick={togglePreviousClasses}>\n                {isPreviousClassesOpen ? 'Hide' : 'Show'}\n              </Button>\n            </Flex>\n            <Collapse in={isPreviousClassesOpen}>\n              <Flex overflowX=\"auto\" direction=\"column\">\n                <Grid templateColumns=\"repeat(auto-fill, minmax(250px, 1fr))\" gap={3}>\n                  {previousClasses.length > 0 ? (\n                    previousClasses.map((enrollment, index) => (\n                      <Box\n                        key={index}\n                        p={4}\n                        borderWidth={1}\n                        borderRadius={8}\n                        bg=\"green.300\"\n                        textAlign=\"center\"\n                      >\n                        <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                        <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                      </Box>\n                    ))\n                  ) : (\n                    <Text>No previous classes found.</Text>\n                  )}\n                </Grid>\n              </Flex>\n            </Collapse>\n          </Box>\n\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Active Courses\n            </Heading>\n            <Flex overflowX=\"auto\" direction=\"column\" gap=\"2\" justifyContent=\"center\">\n              <Grid templateColumns=\"repeat(auto-fill, minmax(250px, 1fr))\" gap={6} justifyContent=\"center\">\n                {activeClasses.length > 0 ? (\n                  activeClasses.map((enrollment, index) => (\n                    <Box\n                      key={index}\n                      p={4}\n                      borderWidth={1}\n                      borderRadius={8}\n                      bg={getProgressColor(enrollment.progress!)}\n                      textAlign=\"center\"\n                    >\n                      <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                      <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                    </Box>\n                  ))\n                ) : (\n                  <Text>No active classes found.</Text>\n                )}\n              </Grid>\n            </Flex>\n          </Box>\n\n          <Box>\n            <Heading as=\"h3\" size=\"md\" mb={4}>\n              Available Classes\n            </Heading>\n\n            <Flex overflowY=\"auto\" maxHeight=\"400px\">\n              <Table variant=\"simple\" size=\"md\" width=\"100%\">\n                <Thead>\n                  <Tr>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Course Name</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Description</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Max Seats</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Current Seats</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Start Date</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>End Date</Th>\n                    <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Enroll</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {availableCourses.length > 0 ? (\n                    availableCourses.map((course) => (\n                      <Tr key={course.courseId}>\n                        <Td>{course.courseName}</Td>\n                        <Td>{course.description}</Td>\n                        <Td>{course.maxSeats}</Td>\n                        <Td>{course.currentSeats}</Td>\n                        <Td>{new Date(course.startDate).toLocaleDateString()}</Td>\n                        <Td>{new Date(course.endDate).toLocaleDateString()}</Td>\n                        <Td>\n                          <Button colorScheme=\"teal\" size=\"sm\" onClick={() => handleEnroll(course.courseName)}>\n                            Add\n                          </Button>\n                        </Td>\n                      </Tr>\n                    ))\n                  ) : (\n                    <Tr>\n                      <Td colSpan={7} textAlign=\"center\">\n                        No available classes.\n                      </Td>\n                    </Tr>\n                  )}\n                </Tbody>\n              </Table>\n            </Flex>\n          </Box>\n\n          <Flex justifyContent=\"flex-end\">\n            <Button colorScheme=\"red\" size=\"md\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </Flex>\n        </Stack>\n\n        <Modal isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Enrollment Status</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Text>{modalMessage}</Text>\n            </ModalBody>\n            <ModalFooter>\n              <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n                Close\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}