{"ast":null,"code":"var _jsxFileName = \"/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Stack, Flex, Table, Thead, Tbody, Tr, Th, Td, useDisclosure, Collapse } from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    fullName,\n    userId,\n    userType\n  } = location.state || {}; // Extract userType here\n\n  const [enrollments, setEnrollments] = useState([]);\n  const [availableCourses, setAvailableCourses] = useState([]);\n  const [students, setStudents] = useState([]); // State to hold student list\n  const [selectedStudentEnrollments, setSelectedStudentEnrollments] = useState([]); // Enrollments for selected student\n  const [selectedStudentName, setSelectedStudentName] = useState(null); // Selected student's name\n\n  const [selectedCourseDetails, setSelectedCourseDetails] = useState(null); // Selected course details\n  const [isCoursesOpen, setIsCoursesOpen] = useState(false); // Collapsible state for the courses list\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure(); // Modal state control\n  const [studentModalOpen, setStudentModalOpen] = useState(false); // Modal for student enrollments\n  const [courseModalOpen, setCourseModalOpen] = useState(false); // Modal for course details\n  const [isPreviousClassesOpen, setIsPreviousClassesOpen] = useState(false); // Set to false initially\n  const [isStudentsOpen, setIsStudentsOpen] = useState(false); // Collapsible state for the student list\n  const [modalMessage, setModalMessage] = useState(null); // Modal message state\n\n  useEffect(() => {\n    // Fetch courses regardless of the userType\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching courses:', error);\n      }\n    };\n    if (userType === 1) {\n      // Admin user: Fetch the list of students and courses\n      const fetchStudents = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/api/Students/ShowAllStudents');\n          setStudents(response.data);\n        } catch (error) {\n          console.error('Error fetching students:', error);\n        }\n      };\n      fetchStudents();\n      fetchCourses(); // Fetch courses for admin users\n    } else if (userType === 2) {\n      // Student user: Fetch enrollments and courses\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/api/Enrollments/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter(enrollment => enrollment.studentName === fullName);\n          const processedEnrollments = studentEnrollments.map(enrollment => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress\n            };\n          });\n          setEnrollments(processedEnrollments);\n        } catch (error) {\n          console.error('Error fetching enrollments:', error);\n        }\n      };\n      fetchEnrollments();\n      fetchCourses(); // Fetch courses for student users\n    }\n  }, [fullName, userType]);\n\n  // Fetch course details when clicking on a course\n  const handleCourseClick = async courseId => {\n    try {\n      const course = availableCourses.find(c => c.courseId === courseId);\n      if (course) {\n        setSelectedCourseDetails(course);\n        setCourseModalOpen(true); // Open the modal\n      }\n    } catch (error) {\n      console.error('Error fetching course details:', error);\n    }\n  };\n  const handleLogout = () => {\n    navigate('/');\n  };\n  const togglePreviousClasses = () => {\n    setIsPreviousClassesOpen(!isPreviousClassesOpen);\n  };\n  const toggleStudents = () => {\n    setIsStudentsOpen(!isStudentsOpen);\n  };\n  const toggleCourses = () => {\n    setIsCoursesOpen(!isCoursesOpen);\n  };\n\n  // Split enrollments into active and previous\n  const activeClasses = enrollments.filter(e => e.completionStatus === '0');\n  const previousClasses = enrollments.filter(e => e.completionStatus === '1');\n  const getProgressColor = progress => {\n    if (progress === 100) return 'green.300';\n    if (progress < 60) return 'red.300';\n    if (progress < 90) return 'yellow.300';\n    return 'teal.300'; // Default color\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minHeight: \"100vh\",\n    width: \"100vw\",\n    justify: \"center\",\n    align: \"start\",\n    bg: \"gray.50\",\n    p: 6,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      maxWidth: \"1200px\",\n      width: \"100%\",\n      borderWidth: 1,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      bg: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"xl\",\n        mb: 6,\n        textAlign: \"center\",\n        children: userType === 1 ? 'Admin Dashboard' : 'Student Dashboard'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h6\",\n        size: \"l\",\n        mb: 5,\n        textAlign: \"center\",\n        children: [\"User ID: \", userId, \", \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), userType === 1 ?\n      /*#__PURE__*/\n      // Admin Dashboard Content\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              as: \"h3\",\n              size: \"md\",\n              mb: 4,\n              children: \"List of Students\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              onClick: toggleStudents,\n              children: isStudentsOpen ? 'Hide' : 'Show'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: isStudentsOpen,\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              overflowX: \"auto\",\n              maxHeight: \"400px\",\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                variant: \"simple\",\n                size: \"md\",\n                width: \"100%\",\n                children: [/*#__PURE__*/_jsxDEV(Thead, {\n                  children: /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Th, {\n                      position: \"sticky\",\n                      top: 0,\n                      bg: \"gray.100\",\n                      width: \"25%\",\n                      zIndex: 1,\n                      children: \"Student ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      position: \"sticky\",\n                      top: 0,\n                      bg: \"gray.100\",\n                      width: \"100%\",\n                      zIndex: 1,\n                      children: \"Full Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      position: \"sticky\",\n                      top: 0,\n                      bg: \"gray.100\",\n                      width: \"100%\",\n                      zIndex: 1,\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                  children: students.length > 0 ? students.map(student => /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Td, {\n                      children: student.studentId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      children: /*#__PURE__*/_jsxDEV(Text, {\n                        as: \"button\",\n                        color: \"blue.500\",\n                        onClick: () => handleStudentClick(student.fullName),\n                        children: student.fullName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      children: student.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 29\n                    }, this)]\n                  }, student.studentId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 27\n                  }, this)) : /*#__PURE__*/_jsxDEV(Tr, {\n                    children: /*#__PURE__*/_jsxDEV(Td, {\n                      colSpan: 5,\n                      textAlign: \"center\",\n                      children: \"No students found.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 6,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              as: \"h3\",\n              size: \"md\",\n              mb: 4,\n              children: \"List of Courses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              onClick: toggleCourses,\n              children: isCoursesOpen ? 'Hide' : 'Show'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: isCoursesOpen,\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              overflowX: \"auto\",\n              maxHeight: \"400px\",\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                variant: \"simple\",\n                size: \"md\",\n                width: \"100%\",\n                children: [/*#__PURE__*/_jsxDEV(Thead, {\n                  children: /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Th, {\n                      position: \"sticky\",\n                      top: 0,\n                      bg: \"gray.100\",\n                      width: \"25%\",\n                      zIndex: 1,\n                      children: \"Course ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      position: \"sticky\",\n                      top: 0,\n                      bg: \"gray.100\",\n                      width: \"40%\",\n                      zIndex: 1,\n                      children: \"Course Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      position: \"sticky\",\n                      top: 0,\n                      bg: \"gray.100\",\n                      width: \"100%\",\n                      zIndex: 1,\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                  children: availableCourses.length > 0 ? availableCourses.map(course => /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Td, {\n                      children: course.courseId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      children: /*#__PURE__*/_jsxDEV(Text, {\n                        as: \"button\",\n                        color: \"blue.500\",\n                        onClick: () => handleCourseClick(course.courseId),\n                        children: course.courseName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      children: course.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 29\n                    }, this)]\n                  }, course.courseId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 27\n                  }, this)) : /*#__PURE__*/_jsxDEV(Tr, {\n                    children: /*#__PURE__*/_jsxDEV(Td, {\n                      colSpan: 5,\n                      textAlign: \"center\",\n                      children: \"No courses found.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      // Student Dashboard Content\n      _jsxDEV(Stack, {\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              as: \"h3\",\n              size: \"md\",\n              mb: 4,\n              children: \"Completed Courses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              onClick: togglePreviousClasses,\n              children: isPreviousClassesOpen ? 'Hide' : 'Show'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: isPreviousClassesOpen,\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              overflowX: \"auto\",\n              direction: \"row\",\n              gap: 4,\n              children: previousClasses.length > 0 ? previousClasses.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n                minWidth: \"250px\",\n                p: 4,\n                borderWidth: 1,\n                borderRadius: 8,\n                bg: \"green.300\",\n                textAlign: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  size: \"sm\",\n                  children: enrollment.courseName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  mt: 2,\n                  children: [\"Progress: \", enrollment.progress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n                children: \"No previous classes found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Active Courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowX: \"auto\",\n            direction: \"row\",\n            gap: 4,\n            children: activeClasses.length > 0 ? activeClasses.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n              minWidth: \"250px\",\n              p: 4,\n              borderWidth: 1,\n              borderRadius: 8,\n              bg: getProgressColor(enrollment.progress),\n              textAlign: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                size: \"sm\",\n                children: enrollment.courseName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                mt: 2,\n                children: [\"Progress: \", enrollment.progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n              children: \"No active classes found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"md\",\n            mb: 4,\n            children: \"Available Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            overflowX: \"auto\",\n            maxHeight: \"400px\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              variant: \"simple\",\n              size: \"md\",\n              width: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Thead, {\n                children: /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Course Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Max Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Current Seats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    position: \"sticky\",\n                    top: 0,\n                    bg: \"gray.100\",\n                    zIndex: 1,\n                    children: \"Enroll\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                children: availableCourses.length > 0 ? availableCourses.map(course => /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: course.courseName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.maxSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: course.currentSeats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.startDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: new Date(course.endDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      colorScheme: \"teal\",\n                      size: \"sm\",\n                      onClick: () => handleEnroll(course.courseName),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 27\n                  }, this)]\n                }, course.courseId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(Tr, {\n                  children: /*#__PURE__*/_jsxDEV(Td, {\n                    colSpan: 7,\n                    textAlign: \"center\",\n                    children: \"No available classes.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"flex-end\",\n        mt: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"red\",\n          size: \"md\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: studentModalOpen,\n        onClose: () => setStudentModalOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: [selectedStudentName, \"'s Enrollments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: selectedStudentEnrollments.length > 0 ? /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 4,\n              children: selectedStudentEnrollments.map((enrollment, index) => /*#__PURE__*/_jsxDEV(Box, {\n                p: 4,\n                borderWidth: 1,\n                borderRadius: 8,\n                bg: getProgressColor(enrollment.progress),\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  size: \"sm\",\n                  children: enrollment.courseName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  children: [\"Completion Status: \", enrollment.completionStatus === '1' ? 'Completed' : 'In Progress']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  children: [\"Progress: \", enrollment.progress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Text, {\n              children: \"No enrollments found for this student.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              mr: 3,\n              onClick: () => setStudentModalOpen(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: courseModalOpen,\n        onClose: () => setCourseModalOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: [selectedCourseDetails === null || selectedCourseDetails === void 0 ? void 0 : selectedCourseDetails.courseName, \" Details\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: selectedCourseDetails ? /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 25\n                }, this), \" \", selectedCourseDetails.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Max Seats:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 25\n                }, this), \" \", selectedCourseDetails.maxSeats]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Current Seats:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 25\n                }, this), \" \", selectedCourseDetails.currentSeats]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Start Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 25\n                }, this), \" \", new Date(selectedCourseDetails.startDate).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"End Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 25\n                }, this), \" \", new Date(selectedCourseDetails.endDate).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Text, {\n              children: \"No details available for this course.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              mr: 3,\n              onClick: () => setCourseModalOpen(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"jutUBm6+c2DctbSpDpYhXgqelbY=\", false, function () {\n  return [useNavigate, useLocation, useDisclosure];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Text","Button","Stack","Flex","Table","Thead","Tbody","Tr","Th","Td","useDisclosure","Collapse","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","navigate","location","fullName","userId","userType","state","enrollments","setEnrollments","availableCourses","setAvailableCourses","students","setStudents","selectedStudentEnrollments","setSelectedStudentEnrollments","selectedStudentName","setSelectedStudentName","selectedCourseDetails","setSelectedCourseDetails","isCoursesOpen","setIsCoursesOpen","isOpen","onOpen","onClose","studentModalOpen","setStudentModalOpen","courseModalOpen","setCourseModalOpen","isPreviousClassesOpen","setIsPreviousClassesOpen","isStudentsOpen","setIsStudentsOpen","modalMessage","setModalMessage","fetchCourses","response","get","data","error","console","fetchStudents","fetchEnrollments","studentEnrollments","filter","enrollment","studentName","processedEnrollments","map","progress","completionStatus","Math","floor","random","courseName","handleCourseClick","courseId","course","find","c","handleLogout","togglePreviousClasses","toggleStudents","toggleCourses","activeClasses","e","previousClasses","getProgressColor","minHeight","width","justify","align","bg","p","children","maxWidth","borderWidth","borderRadius","boxShadow","as","size","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","alignItems","onClick","in","overflowX","maxHeight","variant","position","top","zIndex","length","student","studentId","color","handleStudentClick","email","colSpan","mt","description","spacing","direction","gap","index","minWidth","maxSeats","currentSeats","Date","startDate","toLocaleDateString","endDate","colorScheme","handleEnroll","mr","_c","$RefreshReg$"],"sources":["/Users/biswadeepmazumder/Desktop/UDAY/Project/frontend/src/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box, Heading, Text, Button, Stack, Flex, Grid, Table, Thead, Tbody, Tr, Th, Td, useDisclosure, Collapse\n} from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface Enrollment {\n  courseName: string;\n  completionStatus: string;\n  progress?: number;\n}\n\ninterface Course {\n  courseId: number;\n  courseName: string;\n  description: string;\n  maxSeats: number;\n  currentSeats: number;\n  startDate: string;\n  endDate: string;\n}\n\ninterface Student {\n  studentId: number;\n  fullName: string;\n  email: string;\n  enrollementdate: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { fullName, userId, userType } = location.state || {}; // Extract userType here\n\n  const [enrollments, setEnrollments] = useState<Enrollment[]>([]);\n  const [availableCourses, setAvailableCourses] = useState<Course[]>([]);\n  const [students, setStudents] = useState<Student[]>([]); // State to hold student list\n  const [selectedStudentEnrollments, setSelectedStudentEnrollments] = useState<Enrollment[]>([]); // Enrollments for selected student\n  const [selectedStudentName, setSelectedStudentName] = useState<string | null>(null); // Selected student's name\n\n  const [selectedCourseDetails, setSelectedCourseDetails] = useState<Course | null>(null); // Selected course details\n  const [isCoursesOpen, setIsCoursesOpen] = useState(false); // Collapsible state for the courses list\n\n  const { isOpen, onOpen, onClose } = useDisclosure();  // Modal state control\n  const [studentModalOpen, setStudentModalOpen] = useState(false);  // Modal for student enrollments\n  const [courseModalOpen, setCourseModalOpen] = useState(false);  // Modal for course details\n  const [isPreviousClassesOpen, setIsPreviousClassesOpen] = useState(false);  // Set to false initially\n  const [isStudentsOpen, setIsStudentsOpen] = useState(false);  // Collapsible state for the student list\n  const [modalMessage, setModalMessage] = useState<string | null>(null);  // Modal message state\n\n  useEffect(() => {\n    // Fetch courses regardless of the userType\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Course/ShowAllCourses');\n        setAvailableCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching courses:', error);\n      }\n    };\n  \n    if (userType === 1) {\n      // Admin user: Fetch the list of students and courses\n      const fetchStudents = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/api/Students/ShowAllStudents');\n          setStudents(response.data);\n        } catch (error) {\n          console.error('Error fetching students:', error);\n        }\n      };\n  \n      fetchStudents();\n      fetchCourses(); // Fetch courses for admin users\n    } else if (userType === 2) {\n      // Student user: Fetch enrollments and courses\n      const fetchEnrollments = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/api/Enrollments/GetAllEnrollments');\n          const studentEnrollments = response.data.data.filter((enrollment: any) => enrollment.studentName === fullName);\n  \n          const processedEnrollments = studentEnrollments.map((enrollment: any) => {\n            let progress = 0;\n            if (enrollment.completionStatus === \"1\") {\n              progress = 100;\n            } else {\n              progress = Math.floor(Math.random() * (90 - 20 + 1)) + 20;\n            }\n            return {\n              courseName: enrollment.courseName,\n              completionStatus: enrollment.completionStatus,\n              progress,\n            };\n          });\n  \n          setEnrollments(processedEnrollments);\n        } catch (error) {\n          console.error('Error fetching enrollments:', error);\n        }\n      };\n  \n      fetchEnrollments();\n      fetchCourses(); // Fetch courses for student users\n    }\n  }, [fullName, userType]);\n\n\n  \n\n  // Fetch course details when clicking on a course\n  const handleCourseClick = async (courseId: number) => {\n    try {\n      const course = availableCourses.find(c => c.courseId === courseId);\n      if (course) {\n        setSelectedCourseDetails(course);\n        setCourseModalOpen(true); // Open the modal\n      }\n    } catch (error) {\n      console.error('Error fetching course details:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    navigate('/');\n  };\n\n  const togglePreviousClasses = () => {\n    setIsPreviousClassesOpen(!isPreviousClassesOpen);\n  };\n\n  const toggleStudents = () => {\n    setIsStudentsOpen(!isStudentsOpen);\n  };\n\n  const toggleCourses = () => {\n    setIsCoursesOpen(!isCoursesOpen);\n  };\n\n  // Split enrollments into active and previous\n  const activeClasses = enrollments.filter((e) => e.completionStatus === '0');\n  const previousClasses = enrollments.filter((e) => e.completionStatus === '1');\n\n  const getProgressColor = (progress: number) => {\n    if (progress === 100) return 'green.300';\n    if (progress < 60) return 'red.300';\n    if (progress < 90) return 'yellow.300';\n    return 'teal.300';  // Default color\n  };\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"100vw\" justify=\"center\" align=\"start\" bg=\"gray.50\" p={6}>\n      <Box p={8} maxWidth=\"1200px\" width=\"100%\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" bg=\"white\">\n        <Heading as=\"h2\" size=\"xl\" mb={6} textAlign=\"center\">\n          {userType === 1 ? 'Admin Dashboard' : 'Student Dashboard'}\n        </Heading>\n        <Heading as=\"h6\" size=\"l\" mb={5} textAlign=\"center\">\n          User ID: {userId}, <i><b>{fullName}</b></i>\n        </Heading>\n\n        {userType === 1 ? (\n          // Admin Dashboard Content\n          <>\n            {/* Collapsible Section for List of Students */}\n            <Box>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Heading as=\"h3\" size=\"md\" mb={4}>\n                  List of Students\n                </Heading>\n                <Button size=\"sm\" onClick={toggleStudents}>\n                  {isStudentsOpen ? 'Hide' : 'Show'}\n                </Button>\n              </Flex>\n              <Collapse in={isStudentsOpen}>\n                <Flex overflowX=\"auto\" maxHeight=\"400px\">\n                  <Table variant=\"simple\" size=\"md\" width=\"100%\">\n                    <Thead>\n                      <Tr>\n                        <Th position=\"sticky\" top={0} bg=\"gray.100\" width=\"25%\" zIndex={1}>Student ID</Th>\n                        <Th position=\"sticky\" top={0} bg=\"gray.100\" width=\"100%\" zIndex={1}>Full Name</Th>\n                        <Th position=\"sticky\" top={0} bg=\"gray.100\" width=\"100%\" zIndex={1}>Email</Th>\n                      </Tr>\n                    </Thead>\n                    <Tbody>\n                      {students.length > 0 ? (\n                        students.map((student) => (\n                          <Tr key={student.studentId}>\n                            <Td>{student.studentId}</Td>\n                            {/* Make the student name clickable */}\n                            <Td>\n                              <Text\n                                as=\"button\"\n                                color=\"blue.500\"\n                                onClick={() => handleStudentClick(student.fullName)}\n                              >\n                                {student.fullName}\n                              </Text>\n                            </Td>\n                            <Td>{student.email}</Td>\n                          </Tr>\n                        ))\n                      ) : (\n                        <Tr>\n                          <Td colSpan={5} textAlign=\"center\">\n                            No students found.\n                          </Td>\n                        </Tr>\n                      )}\n                    </Tbody>\n                  </Table>\n                </Flex>\n              </Collapse>\n            </Box>\n\n            {/* Collapsible Section for List of Courses */}\n            <Box mt={6}>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Heading as=\"h3\" size=\"md\" mb={4}>\n                  List of Courses\n                </Heading>\n                <Button size=\"sm\" onClick={toggleCourses}>\n                  {isCoursesOpen ? 'Hide' : 'Show'}\n                </Button>\n              </Flex>\n              <Collapse in={isCoursesOpen}>\n                <Flex overflowX=\"auto\" maxHeight=\"400px\">\n                  <Table variant=\"simple\" size=\"md\" width=\"100%\">\n                    <Thead>\n                      <Tr>\n                        <Th position=\"sticky\" top={0} bg=\"gray.100\" width=\"25%\" zIndex={1}>Course ID</Th>\n                        <Th position=\"sticky\" top={0} bg=\"gray.100\" width=\"40%\" zIndex={1}>Course Name</Th>\n                        <Th position=\"sticky\" top={0} bg=\"gray.100\" width=\"100%\" zIndex={1}>Description</Th>\n                      </Tr>\n                    </Thead>\n                    <Tbody>\n                      {availableCourses.length > 0 ? (\n                        availableCourses.map((course) => (\n                          <Tr key={course.courseId}>\n                            <Td>{course.courseId}</Td>\n                            {/* Make the course name clickable */}\n                            <Td>\n                              <Text\n                                as=\"button\"\n                                color=\"blue.500\"\n                                onClick={() => handleCourseClick(course.courseId)}\n                              >\n                                {course.courseName}\n                              </Text>\n                            </Td>\n                            <Td>{course.description}</Td>\n                          </Tr>\n                        ))\n                      ) : (\n                        <Tr>\n                          <Td colSpan={5} textAlign=\"center\">\n                            No courses found.\n                          </Td>\n                        </Tr>\n                      )}\n                    </Tbody>\n                  </Table>\n                </Flex>\n              </Collapse>\n            </Box>\n          </>\n        ) : (\n          // Student Dashboard Content\n          <Stack spacing={6}>\n            {/* Previous Classes Section - Collapsible */}\n            <Box>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Heading as=\"h3\" size=\"md\" mb={4}>\n                  Completed Courses\n                </Heading>\n                <Button size=\"sm\" onClick={togglePreviousClasses}>\n                  {isPreviousClassesOpen ? 'Hide' : 'Show'}\n                </Button>\n              </Flex>\n              <Collapse in={isPreviousClassesOpen}>\n                <Flex overflowX=\"auto\" direction=\"row\" gap={4}>\n                  {previousClasses.length > 0 ? (\n                    previousClasses.map((enrollment, index) => (\n                      <Box\n                        key={index}\n                        minWidth=\"250px\"\n                        p={4}\n                        borderWidth={1}\n                        borderRadius={8}\n                        bg=\"green.300\"\n                        textAlign=\"center\"\n                      >\n                        <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                        <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                      </Box>\n                    ))\n                  ) : (\n                    <Text>No previous classes found.</Text>\n                  )}\n                </Flex>\n              </Collapse>\n            </Box>\n\n            {/* Active Classes Section */}\n            <Box>\n              <Heading as=\"h3\" size=\"md\" mb={4}>\n                Active Courses\n              </Heading>\n              <Flex overflowX=\"auto\" direction=\"row\" gap={4}>\n                {activeClasses.length > 0 ? (\n                  activeClasses.map((enrollment, index) => (\n                    <Box\n                      key={index}\n                      minWidth=\"250px\"\n                      p={4}\n                      borderWidth={1}\n                      borderRadius={8}\n                      bg={getProgressColor(enrollment.progress!)}\n                      textAlign=\"center\"\n                    >\n                      <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                      <Text mt={2}>Progress: {enrollment.progress}%</Text>\n                    </Box>\n                  ))\n                ) : (\n                  <Text>No active classes found.</Text>\n                )}\n              </Flex>\n            </Box>\n\n            {/* Available Classes Section */}\n            <Box>\n              <Heading as=\"h3\" size=\"md\" mb={4}>\n                Available Classes\n              </Heading>\n\n              <Flex overflowX=\"auto\" maxHeight=\"400px\">\n                <Table variant=\"simple\" size=\"md\" width=\"100%\">\n                  <Thead>\n                    <Tr>\n                      <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Course Name</Th>\n                      <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Description</Th>\n                      <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Max Seats</Th>\n                      <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Current Seats</Th>\n                      <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Start Date</Th>\n                      <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>End Date</Th>\n                      <Th position=\"sticky\" top={0} bg=\"gray.100\" zIndex={1}>Enroll</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {availableCourses.length > 0 ? (\n                      availableCourses.map((course) => (\n                        <Tr key={course.courseId}>\n                          <Td>{course.courseName}</Td>\n                          <Td>{course.description}</Td>\n                          <Td>{course.maxSeats}</Td>\n                          <Td>{course.currentSeats}</Td>\n                          <Td>{new Date(course.startDate).toLocaleDateString()}</Td>\n                          <Td>{new Date(course.endDate).toLocaleDateString()}</Td>\n                          <Td>\n                            <Button colorScheme=\"teal\" size=\"sm\" onClick={() => handleEnroll(course.courseName)}>\n                              Add\n                            </Button>\n                          </Td>\n                        </Tr>\n                      ))\n                    ) : (\n                      <Tr>\n                        <Td colSpan={7} textAlign=\"center\">\n                          No available classes.\n                        </Td>\n                      </Tr>\n                    )}\n                  </Tbody>\n                </Table>\n              </Flex>\n            </Box>\n          </Stack>\n        )}\n\n        {/* Logout Button */}\n        <Flex justifyContent=\"flex-end\" mt={6}>\n          <Button colorScheme=\"red\" size=\"md\" onClick={handleLogout}>\n            Logout\n          </Button>\n        </Flex>\n\n        {/* Modal for showing student enrollment details */}\n        <Modal isOpen={studentModalOpen} onClose={() => setStudentModalOpen(false)}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>{selectedStudentName}'s Enrollments</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              {selectedStudentEnrollments.length > 0 ? (\n                <Stack spacing={4}>\n                  {selectedStudentEnrollments.map((enrollment, index) => (\n                    <Box key={index} p={4} borderWidth={1} borderRadius={8} bg={getProgressColor(enrollment.progress!)}>\n                      <Heading size=\"sm\">{enrollment.courseName}</Heading>\n                      <Text>Completion Status: {enrollment.completionStatus === '1' ? 'Completed' : 'In Progress'}</Text>\n                      <Text>Progress: {enrollment.progress}%</Text>\n                    </Box>\n                  ))}\n                </Stack>\n              ) : (\n                <Text>No enrollments found for this student.</Text>\n              )}\n            </ModalBody>\n            <ModalFooter>\n              <Button colorScheme=\"blue\" mr={3} onClick={() => setStudentModalOpen(false)}>\n                Close\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n\n        {/* Modal for showing course details */}\n        <Modal isOpen={courseModalOpen} onClose={() => setCourseModalOpen(false)}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>{selectedCourseDetails?.courseName} Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              {selectedCourseDetails ? (\n                <Stack spacing={4}>\n                  <Text><strong>Description:</strong> {selectedCourseDetails.description}</Text>\n                  <Text><strong>Max Seats:</strong> {selectedCourseDetails.maxSeats}</Text>\n                  <Text><strong>Current Seats:</strong> {selectedCourseDetails.currentSeats}</Text>\n                  <Text><strong>Start Date:</strong> {new Date(selectedCourseDetails.startDate).toLocaleDateString()}</Text>\n                  <Text><strong>End Date:</strong> {new Date(selectedCourseDetails.endDate).toLocaleDateString()}</Text>\n                </Stack>\n              ) : (\n                <Text>No details available for this course.</Text>\n              )}\n            </ModalBody>\n            <ModalFooter>\n              <Button colorScheme=\"blue\" mr={3} onClick={() => setCourseModalOpen(false)}>\n                Close\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}